[%%shared
(* This file was generated by Ocsigen Start.
   Feel free to use it, modify it, and redistribute it as you wish. *)
(* PGOcaml demo *)
open Eliom_content.Html.F
open Db_types]

(* Fetch users in database *)
let%rpc get_users () : string list Lwt.t =
  (* For this demo, we add a delay to simulate a network or db latency: *)
  let%lwt () = Lwt_unix.sleep 2. in
  Demo_pgocaml_db.get ()

let%rpc get_headlines () : Db_types.headline list Lwt.t =
  Demo_pgocaml_db.get_headlines ()

(* Generate page for this demo *)
let%shared page () =
  let%lwt org_note =
    Ot_spinner.with_spinner
      (let%lwt hls = get_headlines () in
       let hls = List.map (fun h -> li [txt h.headline_text]) hls in
       Lwt.return [p [txt "hey there"]; ul hls])
  in
  Lwt.return
    [ h1 [%i18n Demo.pgocaml]
    ; p [%i18n Demo.pgocaml_description_1]
    ; p [%i18n Demo.pgocaml_description_2]
    ; p [%i18n Demo.pgocaml_description_3]
    ; org_note ]

(* Service registration is done on both sides (shared section),
   so that pages can be generated from the server
   (first request, crawling, search engines ...)
   or the client (subsequent link clicks, or mobile app ...). *)
let%shared () =
  Maxi_passat_base.App.register ~service:Demo_services.demo_pgocaml
    ( Maxi_passat_page.Opt.connected_page @@ fun myid_o () () ->
      let%lwt p = page () in
      Maxi_passat_container.page ~a:[a_class ["os-page-demo-pgocaml"]] myid_o p
    )
