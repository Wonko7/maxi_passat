[%%shared
(* This file was generated by Ocsigen Start.
   Feel free to use it, modify it, and redistribute it as you wish. *)
(* PGOcaml demo *)
open Eliom_content.Html
open Eliom_content.Html.F
open Db_types
open Ww_lib]

let%rpc get_all_org_files () : string list Lwt.t = Org_db.get_all_org_files ()
[%%shared.start]

let%shared search_str r s =
  try
    ignore @@ Str.search_forward r s 0;
    true
  with Not_found -> false

let%shared search_files () =
  let%lwt fs = get_all_org_files () in
  let e, (signal, set) = Ww_lib.reactive_input () in
  let res_s, set_results = Eliom_shared.React.S.create [] in
  let result =
    R.node
    @@ Eliom_shared.React.S.map ~eq:[%shared ( == )]
         [%shared
           fun fs ->
             ul
             @@ List.map
                  (fun m ->
                    li
                    @@ [ a ~service:Maxi_passat_services.org_file [txt m]
                         @@ String.split_on_char '/' m ])
                  fs]
         res_s
  in
  let _ =
    [%client
      (React.S.map
         (function
           | "" -> ~%set_results []
           | s ->
               let r = Str.regexp_string s in
               let fs = List.filter (search_str r) ~%fs in
               ~%set_results fs)
         ~%signal
        : unit Eliom_shared.React.S.t)]
  in
  Lwt.return @@ div [e; div ~a:[a_class ["search_results"]] [result]]
